name: CI
on:
  push:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      # Test builds on Windows as well
      # Lint and tests don't need to run on other OSes
      matrix:
        os: ['ubuntu-22.04', 'windows-2022']
    steps:
    - uses: actions/checkout@v2

    - name: Setup Rust toolchain
      run: rustup show

    - name: Build library (Linux)
      if: matrix.os == 'ubuntu-22.04'
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: -p framework_lib

    - name: Build Linux tool
      if: matrix.os == 'ubuntu-22.04'
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: -p framework_tool

    - name: Build library (Windows)
      if: matrix.os == 'windows-2022'
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: -p framework_lib --no-default-features --features "windows"

    - name: Build Windows tool
      if: matrix.os == 'windows-2022'
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: -p framework_tool --no-default-features --features "windows"

    - name: Build UEFI application (no ESP)
      run: make -C framework_uefi build/x86_64-unknown-uefi/boot.efi

    - name: Install mtools to build ESP (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: sudo apt-get install -y mtools

    - name: Build ESP (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: make -C framework_uefi

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        run: rustup show

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p framework_lib

  lints:
    name: Lints
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2

    - name: Setup Rust toolchain
      run: rustup show

    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Run cargo clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -p framework_lib -p framework_tool -- -D warnings
